<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>行知</title>
    <link>https://xingzhimars.github.io/</link>
    <description>Recent content on 行知 created by </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sat, 25 Jan 2025 02:04:15 +0800</lastBuildDate><atom:link href="https://xingzhimars.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>二分法</title>
      <link>https://xingzhimars.github.io/blog/%E4%BA%8C%E5%88%86%E6%B3%95/</link>
      <pubDate>Sat, 25 Jan 2025 02:04:15 +0800</pubDate>
      
      <guid>https://xingzhimars.github.io/blog/%E4%BA%8C%E5%88%86%E6%B3%95/</guid>
      <description>&lt;p&gt;二分法模板&lt;/p&gt;
&lt;p&gt;二分法有两个模板，使用模板一查找左端点，使用模板二查找右端点&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images/%E4%BA%8C%E5%88%86%E6%B3%95.png&#34; alt=&#34;二分法&#34;&gt;&lt;/p&gt;
&lt;p&gt;模板一：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (left &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; right) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; mid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (left &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; right) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; 1;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (check(mid) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; target) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    right &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mid;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    left &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mid &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 1;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;将check(mid)看成右手，target看成左手，这是个右手不断往左手靠近的过程，直到右手在左手的左侧，因此这是求左边界，此时的右手就是左边界&lt;/li&gt;
&lt;li&gt;循环条件是 left &amp;lt; right，不是 left &amp;lt;= right&lt;/li&gt;
&lt;li&gt;只有当 left = mid 时，才会在计算mid时加1&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;模板二：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (left &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; right) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; mid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (left &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; right &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 1) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; 1;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (check(mid) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; target) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    left &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mid;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    right &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mid &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; 1;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;将check(mid)看成是左手，target看成是右手，这是左手不断往右手靠近的过程，直到左手在右手的右侧，因此这是求右边界，此时的左手就是右边界&lt;/li&gt;
&lt;li&gt;循环条件 left &amp;lt; right，不是left &amp;lt;= right&lt;/li&gt;
&lt;li&gt;只有当 left = mid时，才会在计算mid时加1&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>博客标题</title>
      <link>https://xingzhimars.github.io/blog/first/</link>
      <pubDate>Thu, 23 Jan 2025 00:05:24 +0800</pubDate>
      
      <guid>https://xingzhimars.github.io/blog/first/</guid>
      <description>&lt;p&gt;这是摘要&lt;/p&gt;
&lt;p&gt;这是内容&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>